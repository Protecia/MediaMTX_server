name: CI - Build, Push and Deploy Docker Image

on:
  push:
    branches: ["main" ]
  pull_request:
    branches: ["main"]
    types: [opened, synchronize, reopened]
  release:
    types: [published]

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: scaleway/action-scw-secret@v0
        with:
          secret-names: |
            /mediamtx/mtx-github
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          default-project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          default-organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
      - run: echo "MTX_SCALEWAY=$MTX_GITHUB" > secret.env
      - name: Display variables
        run: |
          cat secret.env
      - name: Checkout code
        uses: actions/checkout@v3
#      - name: Set variables for push
#        if: github.event_name == 'push'
#        run: |
#          echo "DEPLOY_ENV=re7" > version.env
#          echo "IMAGE_TAG=${{ github.sha }}" >> version.env
#          echo "MTX_ADMIN_PASS=${{ secrets.MTX_ADMIN_PASS_RE7 }}" > secret.env
#      - name: Set variables for pull request
#        if: github.event_name == 'pull_request'
#        run: |
#          echo "DEPLOY_ENV=re7" > version.env
#          echo "IMAGE_TAG=${{ github.sha }}" >> version.env
#          echo "MTX_ADMIN_PASS=${{ secrets.MTX_ADMIN_PASS_RE7 }}" > secret.env
#      - name: Set variables for release
#        if: github.event_name == 'release'
#        run: |
#          echo "DEPLOY_ENV=prod" > version.env
#          echo "IMAGE_TAG=${{ github.event.release.tag_name }}" >> version.env
#          echo "MTX_ADMIN_PASS=${{ secrets.MTX_ADMIN_PASS_RE7 }}" > secret.env
#      - name: Upload code as artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: code
#          path: .

#  build-and-push:
#    runs-on: ubuntu-latest
#    needs: prepare
#    steps:
#      - name: Download code artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: code
#          path: .
#      - name: Set IMAGE_TAG from version.env
#        id: set-image-tag
#        run: |
#          source version.env
#          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USER }}
#          password: ${{ secrets.DOCKER_HUB_TOKEN }}
#      - name: Build Docker image
#        run: docker build -f deploy/Dockerfile -t roboticia/nnvision_server:${{ env.IMAGE_TAG }} .
#      - name: Push Docker image
#        run: docker push roboticia/nnvision_server:${{ env.IMAGE_TAG }}

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build-and-push
#    steps:
#      - name: Download code artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: code
#          path: .
#
#      - name: Set version file
#        id: version-file
#        run: |
#          source version.env
#          echo "VERSION_FILE=version_${DEPLOY_ENV}.env" >> $GITHUB_ENV
#          echo "SECRET_FILE=secret_${DEPLOY_ENV}.env" >> $GITHUB_ENV
#
#      - name: Display variables
#        run: |
#          cat version.env
#          echo "${{ env.VERSION_FILE }}"
#          mv version.env ${{ env.VERSION_FILE }}
#          mv secret.env ${{ env.SECRET_FILE }}
#
#      - name: Copy files to server
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: ${{ secrets.SSH_MTX_HOST }}
#          username: ${{ secrets.SSH_MTX_USER }}
#          key: ${{ secrets.SSH_MTX_KEY }}
#          source: >
#            ./deploy/docker-compose-re7.yaml,
#            ./${{ env.VERSION_FILE }},
#            ./${{ env.SECRET_FILE }},
#            ./deploy/start_remote.sh,
#          target: /home/mediamtx/
#          recursive: true
#          port: ${{ secrets.SSH_MTX_PORT }}
#          overwrite: true
#
#      - name: Start docker compose
#        uses: appleboy/ssh-action@v1.0.0
#        with:
#          host: ${{ secrets.SSH_MTX_HOST }}
#          username: ${{ secrets.SSH_MTX_USER }}
#          key: ${{ secrets.SSH_MTX_KEY }}
#          port: ${{ secrets.SSH_MTX_PORT }}
#          script: |
#            source ${{ env.VERSION_FILE }}
#            cat ${{ env.SECRET_FILE }} ${{ env.VERSION_FILE }} > combined-$DEPLOY_ENV.env
#            cd deploy
##            bash start_remote.sh $DEPLOY_ENV